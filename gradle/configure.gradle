def deps = [:]

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
kotlin.reflect = "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
kotlin.androidExtensions = "org.jetbrains.kotlin:kotlin-android-extensions-runtime:$kotlin_version"
deps.kotlin = kotlin

deps.gson = createDependency('com.google.code.gson', 'gson', '2.8.5')

def support = [:]
support.coreKtx = 'androidx.core:core-ktx:1.3.2'
support.appcompat = 'androidx.appcompat:appcompat:1.2.0'
support.material = 'com.google.android.material:material:1.2.1'
support.constraintlayout = 'androidx.constraintlayout:constraintlayout:2.0.4'
support.preferences = 'androidx.preference:preference-ktx:1.1.1'
support.annotations = 'androidx.annotation:annotation:1.0.0'
deps.support = support

def androidx = [:]
androidx.coreVersion = '1.6.0'
androidx.core = createDependency('androidx.core', 'core', androidx.coreVersion)
androidx.coreKtx = createDependency('androidx.core', 'core-ktx', androidx.coreVersion)
androidx.appcompat = createDependency("androidx.appcompat", "appcompat", "1.2.0")
androidx.fragmentVersion = "1.2.5"
androidx.fragment = createDependency('androidx.fragment', 'fragment', androidx.fragmentVersion)
androidx.fragmentKtx = createDependency('androidx.fragment', 'fragment-ktx', androidx.fragmentVersion)
androidx.activityVersion = "1.1.0"
androidx.activity = createDependency('androidx.activity', 'activity', androidx.activityVersion)
androidx.activityKtx = createDependency('androidx.activity', 'activity-ktx', androidx.activityVersion)
deps.androidx = androidx

def okhttp = [:]
okhttp.version = "4.2.2"
okhttp.core = "com.squareup.okhttp3:okhttp:$okhttp.version"
okhttp.urlconnection = "com.squareup.okhttp3:okhttp-urlconnection:$okhttp.version"
okhttp.loggingintercepter = "com.squareup.okhttp3:logging-interceptor:$okhttp.version"
okhttp.plugin = [:]
okhttp.plugin.loggingintercepter = "com.github.ihsanbal:LoggingInterceptor:2.0.3"
okhttp.plugin.ok2curl = "com.github.mrmike:Ok2Curl:0.3.1"
deps.okhttp = okhttp

def retrofit = [:]
retrofit.version = "2.6.0"
retrofit.core = "com.squareup.retrofit2:retrofit:$retrofit.version"
retrofit.converter = "com.squareup.retrofit2:converter-gson:$retrofit.version"
retrofit.adapter = "com.squareup.retrofit2:adapter-rxjava:$retrofit.version"
retrofit.rx2Adapter = "com.squareup.retrofit2:adapter-rxjava2:$retrofit.version"
deps.retrofit = retrofit

def dagger = [:]
dagger.version = "2.35.1"
dagger.core = "com.google.dagger:dagger:$dagger.version"
dagger.runtime = "com.google.dagger:dagger-android-support:$dagger.version"
dagger.compiler = "com.google.dagger:dagger-compiler:$dagger.version"
dagger.android = "com.google.dagger:dagger-android:$dagger.version"
dagger.androidCompiler = "com.google.dagger:dagger-android-processor:$dagger.version"
deps.dagger = dagger

def autovalue = [:]
autovalue.annotations = "com.google.auto.value:auto-value-annotations:1.7"
autovalue.compiler = "com.google.auto.value:auto-value:1.7"
autovalue.parcel = "com.ryanharter.auto.value:auto-value-parcel:0.2.8"
autovalue.gson = [:]
autovalue.gson.runtime = "com.ryanharter.auto.value:auto-value-gson-runtime:1.1.1"
autovalue.gson.compiler = "com.ryanharter.auto.value:auto-value-gson:1.1.1"
deps.autovalue = autovalue

def rx2 = [:]
rx2.android = createDependency("io.reactivex.rxjava2", "rxandroid", "2.1.1")
rx2.java = createDependency("io.reactivex.rxjava2", "rxjava", "2.2.8")
deps.rx2 = rx2

ext.archLifecycleVersion = "1.1.1"
// ViewModel and LiveData
deps.lifecycleRuntime = createDependency("androidx.lifecycle", "lifecycle-runtime", "2.2.0")
deps.lifecycleExtensions = createDependency("androidx.lifecycle", "lifecycle-extensions", "2.2.0")

def epoxy = [:]
epoxy.version = "5.0.0-beta05"
epoxy.runtime = "com.airbnb.android:epoxy:$epoxy.version"
epoxy.compiler = "com.airbnb.android:epoxy-processor:$epoxy.version"
deps.epoxy = epoxy

ext.butterknifeVersion = "10.2.3"
def butterknife = [:]
butterknife.plugin = "com.jakewharton:butterknife-gradle-plugin:$butterknifeVersion"
butterknife.core = "com.jakewharton:butterknife:$butterknifeVersion"
butterknife.compiler = "com.jakewharton:butterknife-compiler:$butterknifeVersion"
deps.butterknife = butterknife

ext.navigationVersion = "2.2.0"
def navigation = [:]
navigation.fragment = "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
navigation.ui = "androidx.navigation:navigation-ui-ktx:$navigationVersion"
deps.navigation = navigation

def glide = [:]
ext.glideVersion = "4.11.0"
glide.core = "com.github.bumptech.glide:glide:$glideVersion"
glide.integration = "com.github.bumptech.glide:okhttp3-integration:$glideVersion"
glide.compiler = "com.github.bumptech.glide:compiler:$glideVersion"
deps.glide = glide

def assistedInject = [:]
assistedInject.runtime = "com.squareup.inject:assisted-inject-annotations-dagger2:0.4.0"
assistedInject.compiler = "com.squareup.inject:assisted-inject-processor-dagger2:0.4.0"
deps.assistedInject = assistedInject

deps.gson = createDependency('com.google.code.gson', 'gson', '2.8.5')
deps.mvrx = "com.airbnb.android:mvrx:0.7.2"

ext.deps = deps

static def createDependency(String group, String name, String version) {
    return [group: group, name: name, version: version]
}

def buildConfig = [:]
buildConfig.targetSdk = 31
buildConfig.compileSdk = 31
buildConfig.minSdkVersion = 21
buildConfig.buildToolsVersion = "30.0.3"
ext.buildConfig = buildConfig

if (!project.hasProperty('DEFAULT_INTERNAL_VERSION')) {
    ext.DEFAULT_INTERNAL_VERSION = "1.0.0-SNAPSHOT"
}

def internalVersionOf(groupId, artifactId, version = null) {
    version = version != null ? version : "$DEFAULT_INTERNAL_VERSION"
    return "$groupId:$artifactId:$version"
}
ext {
    findProject = { projectName, mavenArtifact ->
        try {
            def project = project(projectName)
            project.ext.mavenArtifact = mavenArtifact
            return project
        } catch (Throwable ignore) {
        }
        return mavenArtifact
    }
}
